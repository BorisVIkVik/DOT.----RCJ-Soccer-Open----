#ifndef FONT_LIB
#define FONT_LIB

#include "tools.h"
#include "SSD1306.h"
const unsigned char bitmaps[] = 
{
// @0 '!' (1 pixels wide)
	0x00, //  
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x00, //  
	0x80, // #
	0x00, //  
	0x00, //  

	// @12 '"' (4 pixels wide)
	0x00, //     
	0x90, // #  #
	0x90, // #  #
	0x90, // #  #
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     

	// @24 '#' (6 pixels wide)
	0x00, //       
	0x48, //  #  # 
	0x48, //  #  # 
	0xFC, // ######
	0x48, //  #  # 
	0x48, //  #  # 
	0x48, //  #  # 
	0xFC, // ######
	0x48, //  #  # 
	0x48, //  #  # 
	0x00, //       
	0x00, //       

	// @36 '$' (5 pixels wide)
	0x00, //      
	0x20, //   #  
	0x70, //  ### 
	0xA8, // # # #
	0xA0, // # #  
	0x60, //  ##  
	0x30, //   ## 
	0x28, //   # #
	0xA8, // # # #
	0x70, //  ### 
	0x20, //   #  
	0x00, //      

	// @48 '%' (7 pixels wide)
	0x00, //        
	0x60, //  ##    
	0x92, // #  #  #
	0x64, //  ##  # 
	0x08, //     #  
	0x10, //    #   
	0x20, //   #    
	0x4C, //  #  ## 
	0x92, // #  #  #
	0x0C, //     ## 
	0x00, //        
	0x00, //        

	// @60 '&' (5 pixels wide)
	0x00, //      
	0x40, //  #   
	0xA0, // # #  
	0xA0, // # #  
	0x40, //  #   
	0x40, //  #   
	0xA8, // # # #
	0x90, // #  # 
	0x90, // #  # 
	0x68, //  ## #
	0x00, //      
	0x00, //      

	// @72 ''' (1 pixels wide)
	0x00, //  
	0x80, // #
	0x80, // #
	0x80, // #
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  

	// @84 '(' (2 pixels wide)
	0x00, //   
	0x40, //  #
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x40, //  #

	// @96 ')' (2 pixels wide)
	0x00, //   
	0x80, // # 
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x80, // # 

	// @108 '*' (3 pixels wide)
	0x00, //    
	0xA0, // # #
	0x40, //  # 
	0xA0, // # #
	0x00, //    
	0x00, //    
	0x00, //    
	0x00, //    
	0x00, //    
	0x00, //    
	0x00, //    
	0x00, //    

	// @120 '+' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x20, //   #  
	0x20, //   #  
	0xF8, // #####
	0x20, //   #  
	0x20, //   #  
	0x00, //      
	0x00, //      
	0x00, //      

	// @132 ',' (2 pixels wide)
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x40, //  #
	0x80, // # 
	0x00, //   

	// @144 '-' (2 pixels wide)
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0xC0, // ##
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   

	// @156 '.' (1 pixels wide)
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x80, // #
	0x00, //  
	0x00, //  

	// @168 '/' (4 pixels wide)
	0x00, //     
	0x10, //    #
	0x10, //    #
	0x10, //    #
	0x20, //   # 
	0x20, //   # 
	0x40, //  #  
	0x40, //  #  
	0x80, // #   
	0x80, // #   
	0x00, //     
	0x00, //     

	// @180 '0' (5 pixels wide)
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @192 '1' (3 pixels wide)
	0x00, //    
	0x20, //   #
	0xE0, // ###
	0x20, //   #
	0x20, //   #
	0x20, //   #
	0x20, //   #
	0x20, //   #
	0x20, //   #
	0x20, //   #
	0x00, //    
	0x00, //    

	// @204 '2' (5 pixels wide)
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x08, //     #
	0x08, //     #
	0x10, //    # 
	0x20, //   #  
	0x40, //  #   
	0x80, // #    
	0xF8, // #####
	0x00, //      
	0x00, //      

	// @216 '3' (5 pixels wide)
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x08, //     #
	0x08, //     #
	0x30, //   ## 
	0x08, //     #
	0x08, //     #
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @228 '4' (5 pixels wide)
	0x00, //      
	0x10, //    # 
	0x30, //   ## 
	0x30, //   ## 
	0x50, //  # # 
	0x50, //  # # 
	0x90, // #  # 
	0xF8, // #####
	0x10, //    # 
	0x10, //    # 
	0x00, //      
	0x00, //      

	// @240 '5' (5 pixels wide)
	0x00, //      
	0xF8, // #####
	0x80, // #    
	0x80, // #    
	0xF0, // #### 
	0x88, // #   #
	0x08, //     #
	0x08, //     #
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @252 '6' (5 pixels wide)
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x80, // #    
	0x80, // #    
	0xF0, // #### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @264 '7' (5 pixels wide)
	0x00, //      
	0xF8, // #####
	0x08, //     #
	0x10, //    # 
	0x10, //    # 
	0x20, //   #  
	0x20, //   #  
	0x40, //  #   
	0x40, //  #   
	0x40, //  #   
	0x00, //      
	0x00, //      

	// @276 '8' (5 pixels wide)
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x70, //  ### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @288 '9' (5 pixels wide)
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x78, //  ####
	0x08, //     #
	0x08, //     #
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @300 ':' (1 pixels wide)
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x80, // #
	0x00, //  
	0x00, //  
	0x00, //  
	0x00, //  
	0x80, // #
	0x00, //  
	0x00, //  

	// @312 ';' (2 pixels wide)
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x40, //  #
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x40, //  #
	0x80, // # 
	0x00, //   

	// @324 '<' (4 pixels wide)
	0x00, //     
	0x00, //     
	0x00, //     
	0x10, //    #
	0x20, //   # 
	0x40, //  #  
	0x80, // #   
	0x40, //  #  
	0x20, //   # 
	0x10, //    #
	0x00, //     
	0x00, //     

	// @336 '=' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0xF8, // #####
	0x00, //      
	0xF8, // #####
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      

	// @348 '>' (4 pixels wide)
	0x00, //     
	0x00, //     
	0x00, //     
	0x80, // #   
	0x40, //  #  
	0x20, //   # 
	0x10, //    #
	0x20, //   # 
	0x40, //  #  
	0x80, // #   
	0x00, //     
	0x00, //     

	// @360 '?' (5 pixels wide)
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x08, //     #
	0x08, //     #
	0x10, //    # 
	0x20, //   #  
	0x20, //   #  
	0x00, //      
	0x20, //   #  
	0x00, //      
	0x00, //      

	// @372 '@' (10 pixels wide)
	0x00, 0x00, //           
	0x1E, 0x00, //    ####   
	0x61, 0x80, //  ##    ## 
	0x40, 0x80, //  #      # 
	0x8E, 0x40, // #   ###  #
	0x92, 0x40, // #  #  #  #
	0x92, 0x40, // #  #  #  #
	0x8D, 0xC0, // #   ## ###
	0x40, 0x00, //  #        
	0x60, 0x00, //  ##       
	0x1F, 0x00, //    #####  
	0x00, 0x00, //           

	// @396 'A' (7 pixels wide)
	0x00, //        
	0x10, //    #   
	0x10, //    #   
	0x28, //   # #  
	0x28, //   # #  
	0x44, //  #   # 
	0x44, //  #   # 
	0x7C, //  ##### 
	0x82, // #     #
	0x82, // #     #
	0x00, //        
	0x00, //        

	// @408 'B' (5 pixels wide)
	0x00, //      
	0xF0, // #### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0xF0, // #### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0xF0, // #### 
	0x00, //      
	0x00, //      

	// @420 'C' (6 pixels wide)
	0x00, //       
	0x78, //  #### 
	0x84, // #    #
	0x80, // #     
	0x80, // #     
	0x80, // #     
	0x80, // #     
	0x80, // #     
	0x84, // #    #
	0x78, //  #### 
	0x00, //       
	0x00, //       

	// @432 'D' (6 pixels wide)
	0x00, //       
	0xF0, // ####  
	0x88, // #   # 
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x88, // #   # 
	0xF0, // ####  
	0x00, //       
	0x00, //       

	// @444 'E' (5 pixels wide)
	0x00, //      
	0xF8, // #####
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0xF0, // #### 
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0xF8, // #####
	0x00, //      
	0x00, //      

	// @456 'F' (5 pixels wide)
	0x00, //      
	0xF8, // #####
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0xF0, // #### 
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0x00, //      
	0x00, //      

	// @468 'G' (6 pixels wide)
	0x00, //       
	0x78, //  #### 
	0x84, // #    #
	0x80, // #     
	0x80, // #     
	0x9C, // #  ###
	0x84, // #    #
	0x84, // #    #
	0x8C, // #   ##
	0x74, //  ### #
	0x00, //       
	0x00, //       

	// @480 'H' (6 pixels wide)
	0x00, //       
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0xFC, // ######
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x00, //       
	0x00, //       

	// @492 'I' (1 pixels wide)
	0x00, //  
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x00, //  
	0x00, //  

	// @504 'J' (4 pixels wide)
	0x00, //     
	0x10, //    #
	0x10, //    #
	0x10, //    #
	0x10, //    #
	0x10, //    #
	0x10, //    #
	0x90, // #  #
	0x90, // #  #
	0x60, //  ## 
	0x00, //     
	0x00, //     

	// @516 'K' (6 pixels wide)
	0x00, //       
	0x88, // #   # 
	0x90, // #  #  
	0xA0, // # #   
	0xC0, // ##    
	0xC0, // ##    
	0xA0, // # #   
	0x90, // #  #  
	0x88, // #   # 
	0x84, // #    #
	0x00, //       
	0x00, //       

	// @528 'L' (5 pixels wide)
	0x00, //      
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0xF8, // #####
	0x00, //      
	0x00, //      

	// @540 'M' (7 pixels wide)
	0x00, //        
	0x82, // #     #
	0x82, // #     #
	0xC6, // ##   ##
	0xC6, // ##   ##
	0xAA, // # # # #
	0xAA, // # # # #
	0x92, // #  #  #
	0x92, // #  #  #
	0x82, // #     #
	0x00, //        
	0x00, //        

	// @552 'N' (6 pixels wide)
	0x00, //       
	0x84, // #    #
	0xC4, // ##   #
	0xC4, // ##   #
	0xA4, // # #  #
	0xA4, // # #  #
	0x94, // #  # #
	0x8C, // #   ##
	0x8C, // #   ##
	0x84, // #    #
	0x00, //       
	0x00, //       

	// @564 'O' (6 pixels wide)
	0x00, //       
	0x78, //  #### 
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x78, //  #### 
	0x00, //       
	0x00, //       

	// @576 'P' (6 pixels wide)
	0x00, //       
	0xF8, // ##### 
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0xF8, // ##### 
	0x80, // #     
	0x80, // #     
	0x80, // #     
	0x80, // #     
	0x00, //       
	0x00, //       

	// @588 'Q' (6 pixels wide)
	0x00, //       
	0x78, //  #### 
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x94, // #  # #
	0x8C, // #   ##
	0x78, //  #### 
	0x04, //      #
	0x00, //       

	// @600 'R' (6 pixels wide)
	0x00, //       
	0xF8, // ##### 
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0xF8, // ##### 
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x00, //       
	0x00, //       

	// @612 'S' (5 pixels wide)
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x80, // #    
	0x80, // #    
	0x70, //  ### 
	0x08, //     #
	0x08, //     #
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @624 'T' (5 pixels wide)
	0x00, //      
	0xF8, // #####
	0x20, //   #  
	0x20, //   #  
	0x20, //   #  
	0x20, //   #  
	0x20, //   #  
	0x20, //   #  
	0x20, //   #  
	0x20, //   #  
	0x00, //      
	0x00, //      

	// @636 'U' (6 pixels wide)
	0x00, //       
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x84, // #    #
	0x78, //  #### 
	0x00, //       
	0x00, //       

	// @648 'V' (7 pixels wide)
	0x00, //        
	0x82, // #     #
	0x82, // #     #
	0x44, //  #   # 
	0x44, //  #   # 
	0x44, //  #   # 
	0x28, //   # #  
	0x28, //   # #  
	0x10, //    #   
	0x10, //    #   
	0x00, //        
	0x00, //        

	// @660 'W' (11 pixels wide)
	0x00, 0x00, //            
	0x80, 0x20, // #         #
	0x80, 0x20, // #         #
	0x44, 0x40, //  #   #   # 
	0x44, 0x40, //  #   #   # 
	0x44, 0x40, //  #   #   # 
	0x2A, 0x80, //   # # # #  
	0x2A, 0x80, //   # # # #  
	0x11, 0x00, //    #   #   
	0x11, 0x00, //    #   #   
	0x00, 0x00, //            
	0x00, 0x00, //            

	// @684 'X' (7 pixels wide)
	0x00, //        
	0x82, // #     #
	0x82, // #     #
	0x44, //  #   # 
	0x28, //   # #  
	0x10, //    #   
	0x28, //   # #  
	0x44, //  #   # 
	0x82, // #     #
	0x82, // #     #
	0x00, //        
	0x00, //        

	// @696 'Y' (7 pixels wide)
	0x00, //        
	0x82, // #     #
	0x82, // #     #
	0x44, //  #   # 
	0x28, //   # #  
	0x10, //    #   
	0x10, //    #   
	0x10, //    #   
	0x10, //    #   
	0x10, //    #   
	0x00, //        
	0x00, //        

	// @708 'Z' (7 pixels wide)
	0x00, //        
	0xFE, // #######
	0x02, //       #
	0x04, //      # 
	0x08, //     #  
	0x10, //    #   
	0x20, //   #    
	0x40, //  #     
	0x80, // #      
	0xFE, // #######
	0x00, //        
	0x00, //        

	// @720 '[' (2 pixels wide)
	0x00, //   
	0xC0, // ##
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0xC0, // ##

	// @732 '\' (4 pixels wide)
	0x00, //     
	0x80, // #   
	0x80, // #   
	0x80, // #   
	0x40, //  #  
	0x40, //  #  
	0x20, //   # 
	0x20, //   # 
	0x10, //    #
	0x10, //    #
	0x00, //     
	0x00, //     

	// @744 ']' (2 pixels wide)
	0x00, //   
	0xC0, // ##
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0x40, //  #
	0xC0, // ##

	// @756 '^' (5 pixels wide)
	0x20, //   #  
	0x50, //  # # 
	0x88, // #   #
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      

	// @768 '_' (6 pixels wide)
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0xFC, // ######

	// @780 '`' (2 pixels wide)
	0x00, //   
	0x80, // # 
	0x40, //  #
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   

	// @792 'a' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x70, //  ### 
	0x08, //     #
	0x78, //  ####
	0x88, // #   #
	0x88, // #   #
	0x78, //  ####
	0x00, //      
	0x00, //      

	// @804 'b' (5 pixels wide)
	0x00, //      
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0xF0, // #### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0xF0, // #### 
	0x00, //      
	0x00, //      

	// @816 'c' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x80, // #    
	0x80, // #    
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @828 'd' (5 pixels wide)
	0x00, //      
	0x08, //     #
	0x08, //     #
	0x08, //     #
	0x78, //  ####
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x78, //  ####
	0x00, //      
	0x00, //      

	// @840 'e' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0xF8, // #####
	0x80, // #    
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @852 'f' (2 pixels wide)
	0x00, //   
	0x40, //  #
	0x80, // # 
	0x80, // # 
	0xC0, // ##
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x00, //   
	0x00, //   

	// @864 'g' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x78, //  ####
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x78, //  ####
	0x08, //     #
	0xF0, // #### 

	// @876 'h' (5 pixels wide)
	0x00, //      
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0xB0, // # ## 
	0xC8, // ##  #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x00, //      
	0x00, //      

	// @888 'i' (1 pixels wide)
	0x00, //  
	0x80, // #
	0x00, //  
	0x00, //  
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x00, //  
	0x00, //  

	// @900 'j' (1 pixels wide)
	0x00, //  
	0x80, // #
	0x00, //  
	0x00, //  
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #

	// @912 'k' (5 pixels wide)
	0x00, //      
	0x80, // #    
	0x80, // #    
	0x80, // #    
	0x90, // #  # 
	0xA0, // # #  
	0xC0, // ##   
	0xA0, // # #  
	0x90, // #  # 
	0x88, // #   #
	0x00, //      
	0x00, //      

	// @924 'l' (1 pixels wide)
	0x00, //  
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x00, //  
	0x00, //  

	// @936 'm' (7 pixels wide)
	0x00, //        
	0x00, //        
	0x00, //        
	0x00, //        
	0xEC, // ### ## 
	0x92, // #  #  #
	0x92, // #  #  #
	0x92, // #  #  #
	0x92, // #  #  #
	0x92, // #  #  #
	0x00, //        
	0x00, //        

	// @948 'n' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0xB0, // # ## 
	0xC8, // ##  #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x00, //      
	0x00, //      

	// @960 'o' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x70, //  ### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x70, //  ### 
	0x00, //      
	0x00, //      

	// @972 'p' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0xF0, // #### 
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0xF0, // #### 
	0x80, // #    
	0x80, // #    

	// @984 'q' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x78, //  ####
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x78, //  ####
	0x08, //     #
	0x08, //     #

	// @996 'r' (2 pixels wide)
	0x00, //   
	0x00, //   
	0x00, //   
	0x00, //   
	0xC0, // ##
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x00, //   
	0x00, //   

	// @1008 's' (4 pixels wide)
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
	0x60, //  ## 
	0x90, // #  #
	0x40, //  #  
	0x20, //   # 
	0x90, // #  #
	0x60, //  ## 
	0x00, //     
	0x00, //     

	// @1020 't' (2 pixels wide)
	0x00, //   
	0x00, //   
	0x80, // # 
	0x80, // # 
	0xC0, // ##
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x80, // # 
	0x40, //  #
	0x00, //   
	0x00, //   

	// @1032 'u' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x88, // #   #
	0x98, // #  ##
	0x68, //  ## #
	0x00, //      
	0x00, //      

	// @1044 'v' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x88, // #   #
	0x88, // #   #
	0x50, //  # # 
	0x50, //  # # 
	0x20, //   #  
	0x20, //   #  
	0x00, //      
	0x00, //      

	// @1056 'w' (7 pixels wide)
	0x00, //        
	0x00, //        
	0x00, //        
	0x00, //        
	0x92, // #  #  #
	0x92, // #  #  #
	0xAA, // # # # #
	0xAA, // # # # #
	0x44, //  #   # 
	0x44, //  #   # 
	0x00, //        
	0x00, //        

	// @1068 'x' (4 pixels wide)
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
	0x90, // #  #
	0x90, // #  #
	0x60, //  ## 
	0x60, //  ## 
	0x90, // #  #
	0x90, // #  #
	0x00, //     
	0x00, //     

	// @1080 'y' (5 pixels wide)
	0x00, //      
	0x00, //      
	0x00, //      
	0x00, //      
	0x48, //  #  #
	0x48, //  #  #
	0x48, //  #  #
	0x48, //  #  #
	0x30, //   ## 
	0x20, //   #  
	0x20, //   #  
	0xC0, // ##   

	// @1092 'z' (4 pixels wide)
	0x00, //     
	0x00, //     
	0x00, //     
	0x00, //     
	0xF0, // ####
	0x10, //    #
	0x20, //   # 
	0x40, //  #  
	0x80, // #   
	0xF0, // ####
	0x00, //     
	0x00, //     

	// @1104 '{' (3 pixels wide)
	0x20, //   #
	0x40, //  # 
	0x40, //  # 
	0x40, //  # 
	0x40, //  # 
	0x80, // #  
	0x40, //  # 
	0x40, //  # 
	0x40, //  # 
	0x40, //  # 
	0x20, //   #
	0x00, //    

	// @1116 '|' (1 pixels wide)
	0x00, //  
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x80, // #
	0x00, //  

	// @1128 '}' (3 pixels wide)
	0x80, // #  
	0x40, //  # 
	0x40, //  # 
	0x40, //  # 
	0x40, //  # 
	0x20, //   #
	0x40, //  # 
	0x40, //  # 
	0x40, //  # 
	0x40, //  # 
	0x80, // #  
	0x00, //    

	// @1140 '~' (6 pixels wide)
	0x00, //       
	0x00, //       
	0x64, //  ##  #
	0x98, // #  ## 
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
	0x00, //       
};

// Character descriptors for Microsoft Sans Serif 8pt
// { [Char width in bits], [Offset into microsoftSansSerif_8ptCharBitmaps in bytes] }
const unsigned fontData[98][2] = 
{
	{1, 0}, 		// ! 
	{4, 12}, 		// " 
	{6, 24}, 		// # 
	{5, 36}, 		// $ 
	{7, 48}, 		// % 
	{5, 60}, 		// & 
	{1, 72}, 		// ' 
	{2, 84}, 		// ( 
	{2, 96}, 		// ) 
	{3, 108}, 		// * 
	{5, 120}, 		// + 
	{2, 132}, 		// , 
	{2, 144}, 		// - 
	{1, 156}, 		// . 
	{4, 168}, 		// / 
	{5, 180}, 		// 0 
	{3, 192}, 		// 1 
	{5, 204}, 		// 2 
	{5, 216}, 		// 3 
	{5, 228}, 		// 4 
	{5, 240}, 		// 5 
	{5, 252}, 		// 6 
	{5, 264}, 		// 7 
	{5, 276}, 		// 8 
	{5, 288}, 		// 9 
	{1, 300}, 		// : 
	{2, 312}, 		// ; 
	{4, 324}, 		// < 
	{5, 336}, 		// = 
	{4, 348}, 		// > 
	{5, 360}, 		// ? 
	{10, 372}, 		// @ 
	{7, 396}, 		// A 
	{5, 408}, 		// B 
	{6, 420}, 		// C 
	{6, 432}, 		// D 
	{5, 444}, 		// E 
	{5, 456}, 		// F 
	{6, 468}, 		// G 
	{6, 480}, 		// H 
	{1, 492}, 		// I 
	{4, 504}, 		// J 
	{6, 516}, 		// K 
	{5, 528}, 		// L 
	{7, 540}, 		// M 
	{6, 552}, 		// N 
	{6, 564}, 		// O 
	{6, 576}, 		// P 
	{6, 588}, 		// Q 
	{6, 600}, 		// R 
	{5, 612}, 		// S 
	{5, 624}, 		// T 
	{6, 636}, 		// U 
	{7, 648}, 		// V 
	{11, 660}, 		// W 
	{7, 684}, 		// X 
	{7, 696}, 		// Y 
	{7, 708}, 		// Z 
	{2, 720}, 		// [ 
	{4, 732}, 		// \ 
	{2, 744}, 		// ] 
	{5, 756}, 		// ^ 
	{6, 768}, 		// _ 
	{2, 780}, 		// ` 
	{5, 792}, 		// a 
	{5, 804}, 		// b 
	{5, 816}, 		// c 
	{5, 828}, 		// d 
	{5, 840}, 		// e 
	{2, 852}, 		// f 
	{5, 864}, 		// g 
	{5, 876}, 		// h 
	{1, 888}, 		// i 
	{1, 900}, 		// j 
	{5, 912}, 		// k 
	{1, 924}, 		// l 
	{7, 936}, 		// m 
	{5, 948}, 		// n 
	{5, 960}, 		// o 
	{5, 972}, 		// p 
	{5, 984}, 		// q 
	{2, 996}, 		// r 
	{4, 1008}, 		// s 
	{2, 1020}, 		// t 
	{5, 1032}, 		// u 
	{5, 1044}, 		// v 
	{7, 1056}, 		// w 
	{4, 1068}, 		// x 
	{5, 1080}, 		// y 
	{4, 1092}, 		// z 
	{3, 1104}, 		// { 
	{1, 1116}, 		// | 
	{3, 1128}, 		// } 
	{6, 1140}, 		// ~ 
	{0, 1152}			// empty
};


#define LETTER_HEIGHT 11

unsigned symbolToIndex(char symbol)
{
	return symbol - '!';
}

unsigned drawChar(SSD1306& display, char symbol, unsigned x, unsigned y)
{
	y *= LETTER_HEIGHT;
	y += 3;
	
	unsigned index = symbolToIndex(symbol);
	
	for (unsigned start = fontData[index][1], end = fontData[index + 1][1], i = start; i < end; i++)
	{
		int symbolSize = fontData[index][0];
		
		if (symbolSize <= 8)
		{
			for (char j = 8 - symbolSize; j < 8; j++)
			{
				display.drawPixel(8 + x - j, y + i - start, ((bitmaps[i] >> j) & 1) ? WHITE : BLACK);
			}
		}
		else
		{
			int cx = 16 + x, cy = y + ((i - start) >> 1), ci = i + 1;
			for (char j = 0; j < 16; j++)
			{
				display.drawPixel(cx - j, cy, ((bitmaps[ci - (j >> 3)] >> (j & 7)) & 1) ? WHITE : BLACK);
			}
			
			i++;
		}
			
	}
	
	return fontData[index][0] + 2;
}

void drawString(SSD1306& display, char* s, unsigned row = 0, unsigned column = 0)
{
	unsigned x = column * 7, i = 0;
	char symbol;
	
	while (true)
	{
		symbol = s[i++];
		
		if (!symbol) 
			break;
		
		if (symbol == ' ')
			x += 5;
		else
			x += drawChar(display, symbol, x, row);
	}
}



typedef long long ll;

template <typename T>
char* toPrint(T x, short next = 3)
{
	bool neg = false;
	ll len = 0;
	
	if (x < 0)
	{
		neg = true;
		x = -x;
	}
	
	// calculate digits number
	ll cx = 1;
	while (cx <= x)
	{
		len++;
		cx *= 10;
	}
	
	ll declen = len;
	
	// float number
	len += 1 + next;
	
	if (declen == 0)
		len++;
	
	char* res = new char[len];
	for (ll j = 0; j < len; j++) res[j] = ' ';

	if (declen == 0)
	{
		res[declen] = '0';
		declen++;
		len--;
	}
	
	
	ll i = declen;
	
	cx = 1;
	while (cx <= x)
	{
		len--;
		res[--i] = '0' + (ll(x / cx) % 10);
		cx *= 10;
	}
	i = declen;
	
	if (ll(x) == x) 
	{
		if (neg)
		{
			int sz = sizeof(res) / sizeof(res[0]);
			char* fin = new char[sz + 1];
			fin[0] = '-';
			for (int i = 0; i < sz; i++)
				fin[i + 1] = res[i];
			
			delete res;
			return fin;
		}
		return res;
	}
	
	res[i++] = '.';
	len--;
	
	x = x - ll(x);
	
	while (len > 0)
	{
		x *= 10;
		res[i++] = '0' + (ll(x) % 10);
		len--;
	}
	
		if (neg)
		{
			int sz = sizeof(res) / sizeof(res[0]);
			char* fin = new char[sz + 1];
			fin[0] = '-';
			for (int i = 0; i < sz; i++)
				fin[i + 1] = res[i];
			delete res;
			
			return fin;
		}
	return res;
}

#include <typeinfo>


template <typename T>
void printTml(SSD1306& display, T x, int next = 3, int row = 0, int column = 0)
{	
	char *ptr = toPrint(x, next);
	
	drawString(display, ptr, row, column);
	
	delete ptr;
}

#endif
